name: Deploy reddis on GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ia-generation-5
  GKE_CLUSTER: futurandco
  GKE_ZONE: europe-west9

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: test

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          python-version: '3.8'

      - name: Install the gcloud cli
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
          install_components: 'gke-gcloud-auth-plugin'
          export_default_credentials: true

      - name: Deploy to GKE
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        run: |
          echo "${GCP_CREDENTIALS}" > /tmp/keyfile.json
          gcloud auth activate-service-account --key-file=/tmp/keyfile.json
          cat /tmp/keyfile.json
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --zone ${{ env.GKE_ZONE }} --project ${{ env.PROJECT_ID }}
          chmod +x redis-pvc.sh
          ./redis-pvc.sh
          kubectl apply -f redis-deployment.yaml
          kubectl apply -f redis-service.yaml
          kubectl apply -f redis-vpa.yaml

      - name: Test Redis Deployment 
        run: |
          kubectl get pods -l app=redis -o json > pods.json
          kubectl get pvc -l app=redis -o json > pvc.json
          kubectl get svc redis -o json > svc.json
          kubectl get vpa redis-vpa > vpa.json

      - name: Verify Redis Pods are running 
        run: |
          pod_status=$(jq -r '.items[].status.phase' pods.json)
          if [[ "$pod_status" != "Running" ]]; then
            echo "One or more Redis pods are not Running"
            exit 1
          fi

      - name: Verify Service is created
        run: |
          svc_name=$(jq -r '.metadata.name' svc.json)
          if [[ "$svc_name" != "redis" ]]; then
            echo "Redis service is not created"
            exit 1
          fi

      - name: Verify Redis functionality
        run: |
          pod_name=$(jq -r '.items[0].metadata.name' pods.json)
          kubectl exec -it $pod_name -- redis-cli ping 

      - name: Verify VPA is created
        run: |
          vpa_name=$(jq -r '.metadata.name' vpa.json)
          if [[ "$vpa_name" != "redis-vpa" ]]; then
            echo "cat vpa.json"
            exit 1
          fi

      - name: Verify PVC is bound
        run: |
          pvc_status=$(jq -r '.items[].status.phase' pvc.json)
          if [[ "$pvc_status" != "Bound" ]]; then
            echo "$pvc_status"
            exit 1
          fi